---
title: "Publishing"
subtitle: "Publishing your site"
footer: "[Hamel Husain](https://hamel.dev)"
format:
  revealjs:
    code-line-numbers: false
    author:
      - "Hamel Husain"
    scrollable: true
    institute: "Parlance Labs"
    transition: fade
    slide-number: true
    chalkboard: false
    theme: [../style/quarto.scss, ../style/slides.scss]
---

## Background

- Render your site `quarto render`
    - This put static files in `_site/` by default, but can change it with the `output-dir` setting:

```{.yaml filename="_quarto.yml"}
project:
  type: website
  output-dir: _site

```
- The `_site/` folder is a static site you can deploy anywhere.  Ex: `python -m http.server --d _site/`
- Preview your site `quarto preview`


## Intro 

Easiest way to get started:

```bash
quarto publish --help
```

Built in targets:

- Quarto Pub (quarto-pub)
- GitHub Pages (gh-pages)
- Posit Connect (connect)
- Netlify (netlify)
- Confluence (confluence)


## GitHub Pages

- It's free
- Cannot get private pages without paying.

```bash
quarto publish
```
:::{.callout-warning}
### Enable GitHub Pages
Make sure you enable GitHub Pages in your repo settings.
:::

## GitHub Actions {.smaller}

See [this repo](https://github.com/quarto-dev/quarto-actions/tree/main/publish), specifically [this example](https://github.com/quarto-dev/quarto-actions/blob/main/examples/quarto-publish-example.yml):

```yaml
name: pub
on:                        # <1>
    push:                  # <1>
        branches: main     # <1>
jobs:
    pub:
        permissions:             # <2>
            contents: write      # <2>
            pages: write         # <2>
        runs-on: ubuntu-latest
        steps:
        - name: Check out repository  # <3>
          uses: actions/checkout@v4   # <3>
        - name: setup Python          # <4>
          uses: actions/setup-python@v3 # <4>
        - name: install Jupyter        # <5>
          run: python3 -m pip install jupyter # <5>
        - name: Install Quarto                     # <6>
          uses: quarto-dev/quarto-actions/setup@v2 # <6>
        - name: Publish to GitHub Pages (and render) # <7>
          uses: quarto-dev/quarto-actions/publish@v2 # <7>
          with:                                      # <7>
            target: gh-pages                         # <7>
```

See [my code](https://github.com/hamelsmu/posit-python-quarto/blob/main/.github/workflows/pub.yml). **Remember: Enable GitHub Pages in your repo settings.**


## What I do {.smaller}

- I am an expert at GitHub Actions, but I still prefer to use `quarto publish`.
- I've found that iterating on GitHub Actions can waste a lot of time.  
- For larger projects with multiple collaborators, I would use the GitHub Actions approach.

## Have some fun

You can render or preview single files with `quarto render` or `quarto preview`.

[hamelsmu/quarto-render](https://github.com/hamelsmu/quarto-render/tree/main).

Example:

[http://127.0.0.1:8000/render/https://github.com/huggingface/notebooks/blob/main/examples/tokenizer_training.ipynb](http://127.0.0.1:8000/render/https://github.com/huggingface/notebooks/blob/main/examples/tokenizer_training.ipynb)


## Exercise

1. Create a new GitHub repo
2. Publish your site with the CLI to GitHub Pages
3. Setup GitHub Actions to publish your site to GitHub Pages for you

